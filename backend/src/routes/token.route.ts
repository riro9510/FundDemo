import express from 'express';
import tokenController from '../controllers/token.controller.js';
import { isAuthenticated } from '../middlewares/auth.middleware.js';
import { errorHandler } from '../middlewares/error.middleware.js';
const router = express.Router();

/**
 * @swagger
 * /token:
 *   post:
 *     summary: Request a temporary JWT token
 *     description: >
 *       Generates a JWT token valid for 5 minutes. The frontend must provide a `clientId` string
 *       (a random string or UUID). This allows each token request to be unique and temporary.
 *     tags:
 *       - Authentication
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - clientId
 *             properties:
 *               clientId:
 *                 type: string
 *                 example: "user-123-randomstring"
 *                 description: Random string or UUID generated by the frontend
 *     responses:
 *       200:
 *         description: JWT token issued successfully
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 token:
 *                   type: string
 *                   description: JWT token string
 *                 expiresIn:
 *                   type: integer
 *                   example: 300
 *                   description: Token expiration in seconds (5 minutes)
 *                 message:
 *                   type: string
 *                   example: "JWT issued successfully"
 *       400:
 *         description: Bad request, clientId missing
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 error:
 *                   type: string
 *                   example: "clientId is required"
 *       500:
 *         description: Internal server error
 */

router.post('/', tokenController.getToken);

router.use(errorHandler);

export default router;
